name: Kubernetes CI/CD Pipeline with Code and Container Scanning

on:
  push:
    branches:
      - main  

env:
  AWS_REGION: 'us-east-1'
  AWS_ACCOUNT_ID: '601458261050'
  ECR_REPOSITORY: 'bluewave-app'
  APP_NAME: 'bluewave-app'
  CLUSTER_NAME: 'bluewave-eks-cluster'


jobs:
  code-scan:
    runs-on: ubuntu-latest
    permissions:
        security-events: write
        contents: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'python'  

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build:
    needs: code-scan
    runs-on: ubuntu-latest
    permissions:
        id-token: write 
        contents: write

    outputs:
      IMAGE_TAG: ${{ steps.bump_version.outputs.new_tag }}
      registry: ${{ steps.login-ecr.outputs.registry }}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.66.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ steps.bump_version.outputs.new_tag }}
          IMAGE_NAME="${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          docker build -t "${IMAGE_NAME}" . --build-arg IMAGE_TAG=${IMAGE_TAG}



      - name: Scan the Docker image with Anchore
        uses: anchore/scan-action@v3
        with:
          image: "${{ env.IMAGE_NAME }}"
          severity-cutoff: critical
          output-format: sarif
          only-fixed: false
          add-cpes-if-none: false
          fail-build: false 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID}}:role/bluewave-GitHubActionsRole-dev
          role-session-name: github-actions_bluewave
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Push Docker image to Amazon ECR
        run: |
          IMAGE_TAG=$IMAGE_TAG
          ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
          IMAGE_NAME="${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}"
          FULL_IMAGE_NAME="${ECR_REGISTRY}/${IMAGE_NAME}"
          docker tag "${IMAGE_NAME}" "${FULL_IMAGE_NAME}"
          docker push "${FULL_IMAGE_NAME}"
        
          



  deploy-dev:
    needs: [code-scan, build]
    runs-on: ubuntu-latest
    environment:
      name: dev
    env: 
      name: dev
    permissions:
      id-token: write 
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/bluewave-GitHubActionsRole-dev
          role-session-name: github-actions_bluewave
          aws-region: ${{ env.AWS_REGION }}
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Update kubeconfig
        run: |
          aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.CLUSTER_NAME }} --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.CLUSTER_NAME }}-admin-access

      - name: Update Kubernetes Deployment Image
        run: |
          ECR_REGISTRY="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"
          IMAGE_TAG="${{ needs.build.outputs.IMAGE_TAG }}"
          IMAGE_FULL_TAG="${ECR_REGISTRY}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}"
      
          sed -i 's|<image_full_tag>|'"$IMAGE_FULL_TAG"'|g' templates/k8s/bluewave.yaml
          sed -i 's|<ingress_path>|'"${{ env.name }}"'|g' templates/k8s/bluewave.yaml
        
          
      - name: Deploy to Dev
        run: kubectl apply -f templates/k8s/ --namespace=${{ env.name }}

  deploy-staging:
    needs: [build, deploy-dev]
    runs-on: ubuntu-latest
    environment:
      name: staging
    env: 
      name: staging
    permissions:
      id-token: write 
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/bluewave-GitHubActionsRole-dev
          role-session-name: github-actions_bluewave
          aws-region: ${{ env.AWS_REGION }}
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Update kubeconfig
        run: |
          aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.CLUSTER_NAME }} --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.CLUSTER_NAME }}-admin-access

      - name: Update Kubernetes Deployment Image
        run: |
          ECR_REGISTRY="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"
          IMAGE_TAG="${{ needs.build.outputs.IMAGE_TAG }}"
          IMAGE_FULL_TAG="${ECR_REGISTRY}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}"
      
          sed -i 's|<image_full_tag>|'"$IMAGE_FULL_TAG"'|g' templates/k8s/bluewave.yaml
          sed -i 's|<ingress_path>|'"${{ env.name }}"'|g' templates/k8s/bluewave.yaml
        
          
      - name: Deploy to Staging 
        run: kubectl apply -f templates/k8s/ --namespace=${{ env.name }}


  deploy-production:
    needs: [build, deploy-staging]
    runs-on: ubuntu-latest
    environment:
      name: prod
    env: 
      name: prod
    permissions:
      id-token: write 
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/bluewave-GitHubActionsRole-dev
          role-session-name: github-actions_bluewave
          aws-region: ${{ env.AWS_REGION }}
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Update kubeconfig
        run: |
          aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.CLUSTER_NAME }} --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.CLUSTER_NAME }}-admin-access

      - name: Update Kubernetes Deployment Image
        run: |
          ECR_REGISTRY="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"
          IMAGE_TAG="${{ needs.build.outputs.IMAGE_TAG }}"
          IMAGE_FULL_TAG="${ECR_REGISTRY}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}"
      
          sed -i 's|<image_full_tag>|'"$IMAGE_FULL_TAG"'|g' templates/k8s/bluewave.yaml
          sed -i 's|<ingress_path>|'"${{ env.name }}"'|g' templates/k8s/bluewave.yaml
        
          
      - name: Deploy to Staging 
        run: kubectl apply -f templates/k8s/ --namespace=${{ env.name }}